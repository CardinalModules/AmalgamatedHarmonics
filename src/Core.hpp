#pragma once

#include "AH.hpp"

#include <iostream>

struct Quantizer {

	// Reference, midi note to scale
	// 0	1
	// 1	b2 (#1)
	// 2	2
	// 3	b3 (#2)
	// 4	3
	// 5	4
	// 6	b5 (#4)
	// 7	5
	// 8	b6 (#5)
	// 9 	6
	// 10	b7 (#6)
	// 11	7

	// http://www.grantmuller.com/MidiReference/doc/midiReference/ScaleReference.html
	// Although their definition of the Blues scale is wrong
	// Added the octave note to ensure that the last note is correctly processed
	int SCALE_CHROMATIC      [13]= {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}; 	// All of the notes
	int SCALE_IONIAN         [8] = {0, 2, 4, 5, 7, 9, 11, 12};			// 1,2,3,4,5,6,7
	int SCALE_DORIAN         [8] = {0, 2, 3, 5, 7, 9, 10, 12};			// 1,2,b3,4,5,6,b7
	int SCALE_PHRYGIAN       [8] = {0, 1, 3, 5, 7, 8, 10, 12};			// 1,b2,b3,4,5,b6,b7
	int SCALE_LYDIAN         [8] = {0, 2, 4, 6, 7, 9, 10, 12};			// 1,2,3,#4,5,6,7
	int SCALE_MIXOLYDIAN     [8] = {0, 2, 4, 5, 7, 9, 10, 12};			// 1,2,3,4,5,6,b7 
	int SCALE_AEOLIAN        [8] = {0, 2, 3, 5, 7, 8, 10, 12};			// 1,2,b3,4,5,b6,b7
	int SCALE_LOCRIAN        [8] = {0, 1, 3, 5, 6, 8, 10, 12};			// 1,b2,b3,4,b5,b6,b7
	int SCALE_MAJOR_PENTA    [6] = {0, 2, 4, 7, 9, 12};					// 1,2,3,5,6
	int SCALE_MINOR_PENTA    [6] = {0, 3, 5, 7, 10, 12};				// 1,b3,4,5,b7
	int SCALE_HARMONIC_MINOR [8] = {0, 2, 3, 5, 7, 8, 11, 12};			// 1,2,b3,4,5,b6,7
	int SCALE_BLUES          [7] = {0, 3, 5, 6, 7, 10, 12};				// 1,b3,4,b5,5,b7

	enum Notes {
		NOTE_C = 0,
		NOTE_D_FLAT, // C Sharp
		NOTE_D,
		NOTE_E_FLAT, // D Sharp
		NOTE_E,
		NOTE_F,
		NOTE_G_FLAT, //F Sharp
		NOTE_G,
		NOTE_A_FLAT, // G Sharp
		NOTE_A,
		NOTE_B_FLAT, // A Sharp
		NOTE_B,
		NUM_NOTES
	};

	int CIRCLE_FIFTHS [12] = {
		NOTE_C,
		NOTE_G,
		NOTE_D,
		NOTE_A,
		NOTE_E, 
		NOTE_B,
		NOTE_G_FLAT,
		NOTE_D_FLAT,
		NOTE_A_FLAT,
		NOTE_E_FLAT,
		NOTE_B_FLAT,
		NOTE_F
	};


	std::string noteNames[12] = {
		"C",
		"Db",
		"D",
		"Eb",
		"E",
		"F",
		"Gb",
		"G",
		"Ab",
		"A",
		"Bb",
		"B",
	};

	Notes root = NOTE_C;

	enum Scales {
		CHROMATIC = 0,
 		IONIAN,
		DORIAN,
		PHRYGIAN,
		LYDIAN,
		MIXOLYDIAN,
		AEOLIAN,
		LOCRIAN,
		MAJOR_PENTA,
		MINOR_PENTA,
		HARMONIC_MINOR,
		BLUES,
		NUM_SCALES
	};

	std::string scaleNames[12] = {
		"Chromatic",
		"Ionian (Major)",
		"Dorian",
		"Phrygian",
		"Lydian",
		"Mixolydian",
		"Aeolian (Natural Minor)",
		"Locrian",
		"Major Pentatonic",
		"Minor Pentatonic",
		"Harmonic Minor",
		"Blues"
	};

	enum Degrees {
		FIRST,
		FLAT_SECOND,
		SECOND,
		FLAT_THIRD,
		THIRD,
		FOURTH,
		FLAT_FIFTH,
		FIFTH,
		FLAT_SIXTH,
		SIXTH,
		FLAT_SEVENTH,
		SEVENTH,
		OCTAVE
	};

	std::string degreeNames[13] {
		"1",
		"b2",
		"2",
		"b3",
		"3",
		"4",
		"b5",
		"5",
		"b6",
		"6",
		"b7",
		"7",
		"O"
	};

	bool debug = false;
	int poll = 5000;
	int stepX = 0;

	/*
	* Convert a V/OCT voltage to a quantized pitch, key and scale, and calculate various information about the quantised note.
	*/
	
	float getPitchFromVolts(float inVolts, int inRoot, int inScale, int *outNote, int *outDegree);

	float getPitchFromVolts(float inVolts, float inRoot, float inScale, int *outRoot, int *outScale, int *outNote, int *outDegree);
	
	/*
	 * Convert a root note (relative to C, C=0) and positive semi-tone offset from that root to a voltage (1V/OCT, 0V = C4 (or 3??))
	 */
	float getVoltsFromPitch(int inNote, int inRoot);
	
	/* From the numerical key on a keyboard (0 = C, 11 = B), spacing in px between white keys and a starting x and Y coordinate for the C key (in px)
	* calculate the actual X and Y coordinate for a key, and the scale note to which that key belongs (see Midi note mapping)
	* http://www.grantmuller.com/MidiReference/doc/midiReference/ScaleReference.html */
	void calculateKey(int inKey, float spacing, float xOff, float yOff, float *x, float *y, int *scale); 
	
	
	float getVoltsFromScale(int scale) {
		return rescalef(scale, 0, Quantizer::NUM_SCALES - 1, 0.0, 10.0);
	}
	
	int getScaleFromVolts(float volts) {
		return round(rescalef(fabs(volts), 0.0, 10.0, 0, Quantizer::NUM_SCALES - 1));
	}

	float getVoltsFromKey(int key) {
		return rescalef(key, 0, Quantizer::NUM_NOTES - 1, 0.0, 10.0);
	}
	
	int getKeyFromVolts(float volts) {
		return round(rescalef(fabs(volts), 0.0, 10.0, 0, Quantizer::NUM_NOTES - 1));
	}
	
};


struct ChordDef {
	int number;
	std::string quality;
	int	root[6];
	int	first[6];
	int	second[6];
};

struct Chord {

	const static int NUM_CHORDS = 99;

	ChordDef Chords[NUM_CHORDS] {
		{	0	,"None",{	-24	,	-24	,	-24	,	-24	,	-24	,	-24	},{	-24	,	-24	,	-24	,	-24	,	-24	,	-24	},{	-24	,	-24	,	-24	,	-24	,	-24	,	-24	}},
		{	1	,"M",{	0	,	4	,	7	,	-24	,	-20	,	-17	},{	12	,	4	,	7	,	-12	,	-20	,	-17	},{	12	,	16	,	7	,	-12	,	-8	,	-17	}},
		{	2	,"M#5",{	0	,	4	,	8	,	-24	,	-20	,	-16	},{	12	,	4	,	8	,	-12	,	-20	,	-16	},{	12	,	16	,	8	,	-12	,	-8	,	-16	}},
		{	3	,"M#5add9",{	0	,	4	,	8	,	14	,	-24	,	-20	},{	12	,	4	,	8	,	14	,	-24	,	-20	},{	12	,	16	,	8	,	14	,	-12	,	-20	}},
		{	4	,"M13",{	0	,	4	,	7	,	11	,	14	,	21	},{	12	,	4	,	7	,	11	,	14	,	21	},{	12	,	16	,	7	,	11	,	14	,	21	}},
		{	5	,"M6",{	0	,	4	,	7	,	21	,	-24	,	-20	},{	12	,	4	,	7	,	21	,	-24	,	-20	},{	12	,	16	,	7	,	21	,	-12	,	-20	}},
		{	6	,"M6#11",{	0	,	4	,	7	,	9	,	18	,	-24	},{	12	,	4	,	7	,	9	,	18	,	-24	},{	12	,	16	,	7	,	9	,	18	,	-24	}},
		{	7	,"M69",{	0	,	4	,	7	,	9	,	14	,	-24	},{	12	,	4	,	7	,	9	,	14	,	-24	},{	12	,	16	,	7	,	9	,	14	,	-24	}},
		{	8	,"M69#11",{	0	,	4	,	7	,	9	,	14	,	18	},{	12	,	4	,	7	,	9	,	14	,	18	},{	12	,	16	,	7	,	9	,	14	,	18	}},
		{	9	,"M7#11",{	0	,	4	,	7	,	11	,	18	,	-24	},{	12	,	4	,	7	,	11	,	18	,	-24	},{	12	,	16	,	7	,	11	,	18	,	-24	}},
		{	10	,"M7#5",{	0	,	4	,	8	,	11	,	-24	,	-20	},{	12	,	4	,	8	,	11	,	-24	,	-20	},{	12	,	16	,	8	,	11	,	-12	,	-20	}},
		{	11	,"M7#5sus4",{	0	,	5	,	8	,	11	,	-24	,	-19	},{	12	,	5	,	8	,	11	,	-24	,	-19	},{	12	,	17	,	8	,	11	,	-12	,	-19	}},
		{	12	,"M7#9#11",{	0	,	4	,	7	,	11	,	15	,	18	},{	12	,	4	,	7	,	11	,	15	,	18	},{	12	,	16	,	7	,	11	,	15	,	18	}},
		{	13	,"M7add13",{	0	,	4	,	7	,	9	,	11	,	14	},{	12	,	4	,	7	,	9	,	11	,	14	},{	12	,	16	,	7	,	9	,	11	,	14	}},
		{	14	,"M7b5",{	0	,	4	,	6	,	11	,	-24	,	-20	},{	12	,	4	,	6	,	11	,	-24	,	-20	},{	12	,	16	,	6	,	11	,	-12	,	-20	}},
		{	15	,"M7b6",{	0	,	4	,	8	,	11	,	-24	,	-20	},{	12	,	4	,	8	,	11	,	-24	,	-20	},{	12	,	16	,	8	,	11	,	-12	,	-20	}},
		{	16	,"M7b9",{	0	,	4	,	7	,	11	,	13	,	-20	},{	12	,	4	,	7	,	11	,	13	,	-20	},{	12	,	16	,	7	,	11	,	13	,	-20	}},
		{	17	,"M7sus4",{	0	,	5	,	7	,	11	,	-24	,	-19	},{	12	,	5	,	7	,	11	,	-24	,	-19	},{	12	,	17	,	7	,	11	,	-12	,	-19	}},
		{	18	,"M9",{	0	,	4	,	7	,	11	,	14	,	-24	},{	12	,	4	,	7	,	11	,	14	,	-24	},{	12	,	16	,	7	,	11	,	14	,	-24	}},
		{	19	,"M9#11",{	0	,	4	,	7	,	11	,	14	,	18	},{	12	,	4	,	7	,	11	,	14	,	18	},{	12	,	16	,	7	,	11	,	14	,	18	}},
		{	20	,"M9#5",{	0	,	4	,	8	,	11	,	14	,	-24	},{	12	,	4	,	8	,	11	,	14	,	-24	},{	12	,	16	,	8	,	11	,	14	,	-24	}},
		{	21	,"M9#5sus4",{	0	,	5	,	8	,	11	,	14	,	-24	},{	12	,	5	,	8	,	11	,	14	,	-24	},{	12	,	17	,	8	,	11	,	14	,	-24	}},
		{	22	,"M9b5",{	0	,	4	,	6	,	11	,	14	,	-24	},{	12	,	4	,	6	,	11	,	14	,	-24	},{	12	,	16	,	6	,	11	,	14	,	-24	}},
		{	23	,"M9sus4",{	0	,	5	,	7	,	11	,	14	,	-24	},{	12	,	5	,	7	,	11	,	14	,	-24	},{	12	,	17	,	7	,	11	,	14	,	-24	}},
		{	24	,"Madd9",{	0	,	4	,	7	,	14	,	-24	,	-20	},{	12	,	4	,	7	,	14	,	-24	,	-20	},{	12	,	16	,	7	,	14	,	-12	,	-20	}},
		{	25	,"Maj7",{	0	,	4	,	7	,	11	,	-24	,	-20	},{	12	,	4	,	7	,	11	,	-24	,	-20	},{	12	,	16	,	7	,	11	,	-12	,	-20	}},
		{	26	,"Mb5",{	0	,	4	,	6	,	-24	,	-20	,	-18	},{	12	,	4	,	6	,	-12	,	-20	,	-18	},{	12	,	16	,	6	,	-12	,	-8	,	-18	}},
		{	27	,"Mb6",{	0	,	4	,	20	,	-24	,	-20	,	-4	},{	12	,	4	,	20	,	-12	,	-20	,	-4	},{	12	,	16	,	20	,	-12	,	-8	,	-4	}},
		{	28	,"Msus2",{	0	,	2	,	7	,	-24	,	-22	,	-17	},{	12	,	2	,	7	,	-12	,	-22	,	-17	},{	12	,	14	,	7	,	-12	,	-10	,	-17	}},
		{	29	,"Msus4",{	0	,	5	,	7	,	-24	,	-19	,	-17	},{	12	,	5	,	7	,	-12	,	-19	,	-17	},{	12	,	17	,	7	,	-12	,	-7	,	-17	}},
		{	30	,"Maddb9",{	0	,	4	,	7	,	13	,	-24	,	-20	},{	12	,	4	,	7	,	13	,	-24	,	-20	},{	12	,	16	,	7	,	13	,	-12	,	-20	}},
		{	31	,"7",{	0	,	4	,	7	,	10	,	-24	,	-20	},{	12	,	4	,	7	,	10	,	-24	,	-20	},{	12	,	16	,	7	,	10	,	-12	,	-20	}},
		{	32	,"9",{	0	,	4	,	7	,	10	,	14	,	-24	},{	12	,	4	,	7	,	10	,	14	,	-24	},{	12	,	16	,	7	,	10	,	14	,	-24	}},
		{	33	,"11",{	0	,	7	,	10	,	14	,	17	,	-24	},{	12	,	7	,	10	,	14	,	17	,	-24	},{	12	,	19	,	10	,	14	,	17	,	-24	}},
		{	34	,"13",{	0	,	4	,	7	,	10	,	14	,	21	},{	12	,	4	,	7	,	10	,	14	,	21	},{	12	,	16	,	7	,	10	,	14	,	21	}},
		{	35	,"11b9",{	0	,	7	,	10	,	13	,	17	,	-24	},{	12	,	7	,	10	,	13	,	17	,	-24	},{	12	,	19	,	10	,	13	,	17	,	-24	}},
		{	36	,"13#9",{	0	,	4	,	7	,	10	,	15	,	21	},{	12	,	4	,	7	,	10	,	15	,	21	},{	12	,	16	,	7	,	10	,	15	,	21	}},
		{	37	,"13b5",{	0	,	4	,	6	,	9	,	10	,	14	},{	12	,	4	,	6	,	9	,	10	,	14	},{	12	,	16	,	6	,	9	,	10	,	14	}},
		{	38	,"13b9",{	0	,	4	,	7	,	10	,	13	,	21	},{	12	,	4	,	7	,	10	,	13	,	21	},{	12	,	16	,	7	,	10	,	13	,	21	}},
		{	39	,"13no5",{	0	,	4	,	10	,	14	,	21	,	-24	},{	12	,	4	,	10	,	14	,	21	,	-24	},{	12	,	16	,	10	,	14	,	21	,	-24	}},
		{	40	,"13sus4",{	0	,	5	,	7	,	10	,	14	,	21	},{	12	,	5	,	7	,	10	,	14	,	21	},{	12	,	17	,	7	,	10	,	14	,	21	}},
		{	41	,"69#11",{	0	,	4	,	7	,	9	,	14	,	18	},{	12	,	4	,	7	,	9	,	14	,	18	},{	12	,	16	,	7	,	9	,	14	,	18	}},
		{	42	,"7#11",{	0	,	4	,	7	,	10	,	18	,	-24	},{	12	,	4	,	7	,	10	,	18	,	-24	},{	12	,	16	,	7	,	10	,	18	,	-24	}},
		{	43	,"7#11b13",{	0	,	4	,	7	,	10	,	18	,	20	},{	12	,	4	,	7	,	10	,	18	,	20	},{	12	,	16	,	7	,	10	,	18	,	20	}},
		{	44	,"7#5",{	0	,	4	,	8	,	10	,	-24	,	-20	},{	12	,	4	,	8	,	10	,	-24	,	-20	},{	12	,	16	,	8	,	10	,	-12	,	-20	}},
		{	45	,"7#5#9",{	0	,	4	,	8	,	10	,	15	,	-24	},{	12	,	4	,	8	,	10	,	15	,	-24	},{	12	,	16	,	8	,	10	,	15	,	-24	}},
		{	46	,"7#5b9",{	0	,	4	,	8	,	10	,	13	,	-24	},{	12	,	4	,	8	,	10	,	13	,	-24	},{	12	,	16	,	8	,	10	,	13	,	-24	}},
		{	47	,"7#5b9#11",{	0	,	4	,	8	,	10	,	13	,	18	},{	12	,	4	,	8	,	10	,	13	,	18	},{	12	,	16	,	8	,	10	,	13	,	18	}},
		{	48	,"7#5sus4",{	0	,	5	,	8	,	10	,	-24	,	-19	},{	12	,	5	,	8	,	10	,	-24	,	-19	},{	12	,	17	,	8	,	10	,	-12	,	-19	}},
		{	49	,"7#9",{	0	,	4	,	7	,	10	,	15	,	-24	},{	12	,	4	,	7	,	10	,	15	,	-24	},{	12	,	16	,	7	,	10	,	15	,	-24	}},
		{	50	,"7#9#11",{	0	,	4	,	7	,	10	,	15	,	18	},{	12	,	4	,	7	,	10	,	15	,	18	},{	12	,	16	,	7	,	10	,	15	,	18	}},
		{	51	,"7#9b13",{	0	,	4	,	7	,	10	,	15	,	20	},{	12	,	4	,	7	,	10	,	15	,	20	},{	12	,	16	,	7	,	10	,	15	,	20	}},
		{	52	,"7add6",{	0	,	4	,	7	,	10	,	21	,	-24	},{	12	,	4	,	7	,	10	,	21	,	-24	},{	12	,	16	,	7	,	10	,	21	,	-24	}},
		{	53	,"7b13",{	0	,	4	,	10	,	20	,	-24	,	-20	},{	12	,	4	,	10	,	20	,	-24	,	-20	},{	12	,	16	,	10	,	20	,	-12	,	-20	}},
		{	54	,"7b5",{	0	,	4	,	6	,	10	,	-24	,	-20	},{	12	,	4	,	6	,	10	,	-24	,	-20	},{	12	,	16	,	6	,	10	,	-12	,	-20	}},
		{	55	,"7b6",{	0	,	4	,	7	,	8	,	10	,	-24	},{	12	,	4	,	7	,	8	,	10	,	-24	},{	12	,	16	,	7	,	8	,	10	,	-24	}},
		{	56	,"7b9",{	0	,	4	,	7	,	10	,	13	,	-24	},{	12	,	4	,	7	,	10	,	13	,	-24	},{	12	,	16	,	7	,	10	,	13	,	-24	}},
		{	57	,"7b9#11",{	0	,	4	,	7	,	10	,	13	,	18	},{	12	,	4	,	7	,	10	,	13	,	18	},{	12	,	16	,	7	,	10	,	13	,	18	}},
		{	58	,"7b9#9",{	0	,	4	,	7	,	10	,	13	,	15	},{	12	,	4	,	7	,	10	,	13	,	15	},{	12	,	16	,	7	,	10	,	13	,	15	}},
		{	59	,"7b9b13",{	0	,	4	,	7	,	10	,	13	,	20	},{	12	,	4	,	7	,	10	,	13	,	20	},{	12	,	16	,	7	,	10	,	13	,	20	}},
		{	60	,"7no5",{	0	,	4	,	10	,	-24	,	-20	,	-14	},{	12	,	4	,	10	,	-12	,	-20	,	-14	},{	12	,	16	,	10	,	-12	,	-8	,	-14	}},
		{	61	,"7sus4",{	0	,	5	,	7	,	10	,	-24	,	-19	},{	12	,	5	,	7	,	10	,	-24	,	-19	},{	12	,	17	,	7	,	10	,	-12	,	-19	}},
		{	62	,"7sus4b9",{	0	,	5	,	7	,	10	,	13	,	-24	},{	12	,	5	,	7	,	10	,	13	,	-24	},{	12	,	17	,	7	,	10	,	13	,	-24	}},
		{	63	,"7sus4b9b13",{	0	,	5	,	7	,	10	,	13	,	20	},{	12	,	5	,	7	,	10	,	13	,	20	},{	12	,	17	,	7	,	10	,	13	,	20	}},
		{	64	,"9#11",{	0	,	4	,	7	,	10	,	14	,	18	},{	12	,	4	,	7	,	10	,	14	,	18	},{	12	,	16	,	7	,	10	,	14	,	18	}},
		{	65	,"9#5",{	0	,	4	,	8	,	10	,	14	,	-24	},{	12	,	4	,	8	,	10	,	14	,	-24	},{	12	,	16	,	8	,	10	,	14	,	-24	}},
		{	66	,"9#5#11",{	0	,	4	,	8	,	10	,	14	,	18	},{	12	,	4	,	8	,	10	,	14	,	18	},{	12	,	16	,	8	,	10	,	14	,	18	}},
		{	67	,"9b13",{	0	,	4	,	10	,	14	,	20	,	-24	},{	12	,	4	,	10	,	14	,	20	,	-24	},{	12	,	16	,	10	,	14	,	20	,	-24	}},
		{	68	,"9b5",{	0	,	4	,	6	,	10	,	14	,	-24	},{	12	,	4	,	6	,	10	,	14	,	-24	},{	12	,	16	,	6	,	10	,	14	,	-24	}},
		{	69	,"9no5",{	0	,	4	,	10	,	14	,	-24	,	-20	},{	12	,	4	,	10	,	14	,	-24	,	-20	},{	12	,	16	,	10	,	14	,	-12	,	-20	}},
		{	70	,"9sus4",{	0	,	5	,	7	,	10	,	14	,	-24	},{	12	,	5	,	7	,	10	,	14	,	-24	},{	12	,	17	,	7	,	10	,	14	,	-24	}},
		{	71	,"m",{	0	,	3	,	7	,	-24	,	-21	,	-17	},{	12	,	3	,	7	,	-12	,	-21	,	-17	},{	12	,	15	,	7	,	-12	,	-9	,	-17	}},
		{	72	,"m#5",{	0	,	3	,	8	,	-24	,	-21	,	-16	},{	12	,	3	,	8	,	-12	,	-21	,	-16	},{	12	,	15	,	8	,	-12	,	-9	,	-16	}},
		{	73	,"m11",{	0	,	3	,	7	,	10	,	14	,	17	},{	12	,	3	,	7	,	10	,	14	,	17	},{	12	,	15	,	7	,	10	,	14	,	17	}},
		{	74	,"m11A5",{	0	,	3	,	8	,	10	,	14	,	17	},{	12	,	3	,	8	,	10	,	14	,	17	},{	12	,	15	,	8	,	10	,	14	,	17	}},
		{	75	,"m11b5",{	0	,	3	,	10	,	14	,	17	,	18	},{	12	,	3	,	10	,	14	,	17	,	18	},{	12	,	15	,	10	,	14	,	17	,	18	}},
		{	76	,"m6",{	0	,	3	,	5	,	7	,	21	,	-24	},{	12	,	3	,	5	,	7	,	21	,	-24	},{	12	,	15	,	5	,	7	,	21	,	-24	}},
		{	77	,"m69",{	0	,	3	,	7	,	9	,	14	,	-24	},{	12	,	3	,	7	,	9	,	14	,	-24	},{	12	,	15	,	7	,	9	,	14	,	-24	}},
		{	78	,"m7",{	0	,	3	,	7	,	10	,	-24	,	-21	},{	12	,	3	,	7	,	10	,	-24	,	-21	},{	12	,	15	,	7	,	10	,	-12	,	-21	}},
		{	79	,"m7#5",{	0	,	3	,	8	,	10	,	-24	,	-21	},{	12	,	3	,	8	,	10	,	-24	,	-21	},{	12	,	15	,	8	,	10	,	-12	,	-21	}},
		{	80	,"m7add11",{	0	,	3	,	7	,	10	,	17	,	-24	},{	12	,	3	,	7	,	10	,	17	,	-24	},{	12	,	15	,	7	,	10	,	17	,	-24	}},
		{	81	,"m7b5",{	0	,	3	,	6	,	10	,	-24	,	-21	},{	12	,	3	,	6	,	10	,	-24	,	-21	},{	12	,	15	,	6	,	10	,	-12	,	-21	}},
		{	82	,"m9",{	0	,	3	,	7	,	10	,	14	,	-24	},{	12	,	3	,	7	,	10	,	14	,	-24	},{	12	,	15	,	7	,	10	,	14	,	-24	}},
		{	83	,"#5",{	0	,	3	,	8	,	10	,	14	,	-24	},{	12	,	3	,	8	,	10	,	14	,	-24	},{	12	,	15	,	8	,	10	,	14	,	-24	}},
		{	84	,"m9b5",{	0	,	3	,	10	,	14	,	18	,	-24	},{	12	,	3	,	10	,	14	,	18	,	-24	},{	12	,	15	,	10	,	14	,	18	,	-24	}},
		{	85	,"mMaj7",{	0	,	3	,	7	,	11	,	-24	,	-21	},{	12	,	3	,	7	,	11	,	-24	,	-21	},{	12	,	15	,	7	,	11	,	-12	,	-21	}},
		{	86	,"mMaj7b6",{	0	,	3	,	7	,	8	,	11	,	-24	},{	12	,	3	,	7	,	8	,	11	,	-24	},{	12	,	15	,	7	,	8	,	11	,	-24	}},
		{	87	,"mM9",{	0	,	3	,	7	,	11	,	14	,	-24	},{	12	,	3	,	7	,	11	,	14	,	-24	},{	12	,	15	,	7	,	11	,	14	,	-24	}},
		{	88	,"mM9b6",{	0	,	3	,	7	,	8	,	11	,	14	},{	12	,	3	,	7	,	8	,	11	,	14	},{	12	,	15	,	7	,	8	,	11	,	14	}},
		{	89	,"mb6M7",{	0	,	3	,	8	,	11	,	-24	,	-21	},{	12	,	3	,	8	,	11	,	-24	,	-21	},{	12	,	15	,	8	,	11	,	-12	,	-21	}},
		{	90	,"mb6b9",{	0	,	3	,	8	,	13	,	-24	,	-21	},{	12	,	3	,	8	,	13	,	-24	,	-21	},{	12	,	15	,	8	,	13	,	-12	,	-21	}},
		{	91	,"o",{	0	,	3	,	6	,	-24	,	-21	,	-18	},{	12	,	3	,	6	,	-12	,	-21	,	-18	},{	12	,	15	,	6	,	-12	,	-9	,	-18	}},
		{	92	,"o7",{	0	,	3	,	6	,	21	,	-24	,	-21	},{	12	,	3	,	6	,	21	,	-24	,	-21	},{	12	,	15	,	6	,	21	,	-12	,	-21	}},
		{	93	,"o7M7",{	0	,	3	,	6	,	9	,	11	,	-24	},{	12	,	3	,	6	,	9	,	11	,	-24	},{	12	,	15	,	6	,	9	,	11	,	-24	}},
		{	94	,"oM7",{	0	,	3	,	6	,	11	,	-24	,	-21	},{	12	,	3	,	6	,	11	,	-24	,	-21	},{	12	,	15	,	6	,	11	,	-12	,	-21	}},
		{	95	,"sus24",{	0	,	2	,	5	,	7	,	-24	,	-22	},{	12	,	2	,	5	,	7	,	-24	,	-22	},{	12	,	14	,	5	,	7	,	-12	,	-22	}},
		{	96	,"+add#9",{	0	,	4	,	8	,	15	,	-24	,	-20	},{	12	,	4	,	8	,	15	,	-24	,	-20	},{	12	,	16	,	8	,	15	,	-12	,	-20	}},
		{	97	,"madd4",{	0	,	3	,	5	,	7	,	-24	,	-21	},{	12	,	3	,	5	,	7	,	-24	,	-21	},{	12	,	15	,	5	,	7	,	-12	,	-21	}},
		{	98	,"madd9",{	0	,	3	,	7	,	14	,	-24	,	-21	},{	12	,	3	,	7	,	14	,	-24	,	-21	},{	12	,	15	,	7	,	14	,	-12	,	-21	}},		
	};
		// "M				[6] = {0,4,7,-1,-1,-1};
		// "Ms5			[6] = {0,4,8,-1,-1,-1};
		// "Ms5add9		[6] = {0,4,8,14,-1,-1};
		// "M13			[6] = {0,4,7,11,14,21};
		// "M6			[6] = {0,4,7,21,-1,-1};
		// "M6s11			[6] = {0,4,7,9,		18,-1};
		// "M69			[6] = {0,4,7,9,14,-1};
		// "M69s11		[6] = {0,4,7,9,14,18};
		// "M7s11			[6] = {0,4,7,11,18,-1};
		// "M7s5			[6] = {0,4,8,11,-1,-1};
		// "M7s5sus4		[6] = {0,5,8,11,-1,-1};
		// "M7s9s11		[6] = {0,4,7,11,15,18};
		// "M7add13		[6] = {0,4,7,9,11,14};
		// "M7b5			[6] = {0,4,6,11,-1,-1};
		// "M7b6			[6] = {0,4,8,11,-1,-1};
		// "M7b9			[6] = {0,4,7,11,13,-1};
		// "M7sus4		[6] = {0,5,7,11,-1,-1};
		// "M9			[6] = {0,4,7,11,14,-1};
		// "M9s11			[6] = {0,4,7,11,14,18};
		// "M9s5			[6] = {0,4,8,11,14,-1};
		// "M9s5sus4		[6] = {0,5,8,11,14,-1};
		// "M9b5			[6] = {0,4,6,11,14,-1};
		// "M9sus4		[6] = {0,5,7,11,14,-1};
		// "Madd9			[6] = {0,4,7,14,-1,-1};
		// "Maj7			[6] = {0,4,7,11,-1,-1};
		// "Mb5			[6] = {0,4,6,-1,-1,-1};
		// "Mb6			[6] = {0,4,20,-1,-1,-1};
		// "Msus2			[6] = {0,2,7,-1,-1,-1};
		// "Msus4			[6] = {0,5,7,-1,-1,-1};
		// "Maddb9		[6] = {0,4,7,13,-1,-1};
		// "7				[6] = {0,4,7,10,-1,-1};
		// "9				[6] = {0,4,7,10,14,-1};
		// "11			[6] = {0,7,10,14,17,-1};
		// "13			[6] = {0,4,7,10,14,21};
		// "11b9			[6] = {0,7,10,13,17,-1};
		// "13s9			[6] = {0,4,7,10,15,21};
		// "13b5			[6] = {0,4,6,9,10,14};
		// "13b9			[6] = {0,4,7,10,13,21};
		// "13no5			[6] = {0,4,10,14,21,-1};
		// "13sus4		[6] = {0,5,7,10,14,21};
		// "69s11			[6] = {0,4,7,9,14,18};
		// "7s11			[6] = {0,4,7,10,18,-1};
		// "7s11b13		[6] = {0,4,7,10,18,20};
		// "7s5			[6] = {0,4,8,10,-1,-1};
		// "7s5s9			[6] = {0,4,8,10,15,-1};
		// "7s5b9			[6] = {0,4,8,10,13,-1};
		// "7s5b9s11		[6] = {0,4,8,10,13,18};
		// "7s5sus4		[6] = {0,5,8,10,-1,-1};
		// "7s9			[6] = {0,4,7,10,15,-1};
		// "7s9s11		[6] = {0,4,7,10,15,18};
		// "7s9b13		[6] = {0,4,7,10,15,20};
		// "7add6			[6] = {0,4,7,10,21,-1};
		// "7b13			[6] = {0,4,10,20,-1,-1};
		// "7b5			[6] = {0,4,6,10,-1,-1};
		// "7b6			[6] = {0,4,7,8,10,-1};
		// "7b9			[6] = {0,4,7,10,13,-1};
		// "7b9s11		[6] = {0,4,7,10,13,18};
		// "7b9s9			[6] = {0,4,7,10,13,15};
		// "7b9b13		[6] = {0,4,7,10,13,20};
		// "7no5			[6] = {0,4,10,-1,-1,-1};
		// "7sus4			[6] = {0,5,7,10,-1,-1};
		// "7sus4b9		[6] = {0,5,7,10,13,-1};
		// "7sus4b9b13	[6] = {0,5,7,10,13,20};
		// "9s11			[6] = {0,4,7,10,14,18};
		// "9s5			[6] = {0,4,8,10,14,-1};
		// "9s5s11		[6] = {0,4,8,10,14,18};
		// "9b13			[6] = {0,4,10,14,20,-1};
		// "9b5			[6] = {0,4,6,10,14,-1};
		// "9no5			[6] = {0,4,10,14,-1,-1};
		// "9sus4			[6] = {0,5,7,10,14,-1};
		// "m				[6] = {0,3,7,-1,-1,-1};
		// "ms5			[6] = {0,3,8,-1,-1,-1};
		// "m11			[6] = {0,3,7,10,14,17};
		// "m11A5			[6] = {0,3,8,10,14,17};
		// "m11b5			[6] = {0,3,10,14,17,18};
		// "m6			[6] = {0,3,5,7,21,-1};
		// "m69			[6] = {0,3,7,9,14,-1};
		// "m7			[6] = {0,3,7,10,-1,-1};
		// "m7s5			[6] = {0,3,8,10,-1,-1};
		// "m7add11		[6] = {0,3,7,10,17,-1};
		// "m7b5			[6] = {0,3,6,10,-1,-1};
		// "m9			[6] = {0,3,7,10,14,-1};
		// "s5			[6] = {0,3,8,10,14,-1};
		// "m9b5			[6] = {0,3,10,14,18,-1};
		// "mMaj7			[6] = {0,3,7,11,-1,-1};
		// "mMaj7b6		[6] = {0,3,7,8,11,-1};
		// "mM9			[6] = {0,3,7,11,14,-1};
		// "mM9b6			[6] = {0,3,7,8,11,14};
		// "mb6M7			[6] = {0,3,8,11,-1,-1};
		// "mb6b9			[6] = {0,3,8,13,-1,-1};
		// "o				[6] = {0,3,6,-1,-1,-1};
		// "o7			[6] = {0,3,6,21,-1,-1};
		// "o7M7			[6] = {0,3,6,9,11,-1};
		// "oM7			[6] = {0,3,6,11,-1,-1};
		// "sus24			[6] = {0,2,5,7,-1,-1};
		// "plusadds9		[6] = {0,4,8,15,-1,-1};
		// "madd4			[6] = {0,3,5,7,-1,-1};
		// "madd9			[6] = {0,3,7,14,-1,-1};


	//int 	CHORD_M13s11		[6] = {0,4,7,11,14,18,21
	//int 	CHORD_13s11			[6] = {0,4,7,10,14,18,21
	//int 	CHORD_13s9s11		[6] = {0,4,7,10,15,18,21
	//int 	CHORD_13b9s11		[6] = {0,4,7,10,13,18,21
	//int 	CHORD_7s9s11b13		[6] = {0,4,7,10,15,18,20
	//int 	CHORD_7b9b13s11		[6] = {0,4,7,10,13,18,20
	//int 	CHORD_9s11b13		[6] = {0,4,7,10,14,18,20
	//int 	CHORD_m13			[6] = {0,3,7,10,14,10,21


};

 